---

- name: install system nginx
  apt: pkg=nginx-full
  become: true

# ---------------------------------------------------
# Install SSL cert/key using letsencrypt
# ---------------------------------------------------

- fail: msg="you must provide an email for usage with letsencrypt"
  when: use_letsencrypt and (letsencrypt_email == '' or letsencrypt_email is undefined)

- name: install letsencrypt
  apt: pkg=letsencrypt state=present
  become: true

- name: stop the nginx service
  service: name=nginx state=stopped enabled=yes
  become: true
  when: use_letsencrypt

- stat: path=/etc/letsencrypt/live/{{ domain }}/cert.pem
  register: letsencrypt_cert

- name: run letsencrypt to generate SSL certs
  command: letsencrypt certonly --standalone --standalone-supported-challenges http-01 --agree-tos -m {{ letsencrypt_email }} -d {{ domain }}
  args:
    chdir: /tmp
    creates: /etc/letsencrypt/live/{{ domain }}/
  become: true
  when: use_letsencrypt and letsencrypt_cert.stat.exists == False

# ---------------------------------------------------
# Or, install existing SSL cert/key
# ---------------------------------------------------

- name: make sure /etc/nginx/ssl exists
  file: path={{ssl_path}}/ state={{item}} owner=root group=root mode=0700
  become: true
  with_items:
    - directory
    - touch

- name: install SSL key
  copy: src='../../../security/ssl.key' dest={{ssl_key_path}} owner=root group=root mode=0600
  become: true
  when: not use_letsencrypt

- name: install SSL certificate
  copy: src='../../../security/ssl.crt' dest={{ssl_cert_path}} owner=root group=root mode=0600
  become: true
  when: not use_letsencrypt

# ---------------------------------------------------
# Configure and launch nginx
# ---------------------------------------------------

- name: find notebook static directory
  command: python3 -c 'import notebook; import os; print(os.path.join(notebook.__path__[0], "static"));'
  register: notebook_static_directory
  environment:
    PATH: "/opt/conda/bin:{{ (ansible_env|default({})).PATH|default('') }}"

- name: install nginx.conf
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf owner=root group=root mode=0644 backup=yes
  become: true
  notify:
    - reload nginx

- name: start the nginx service
  service: name=nginx state=started enabled=yes
  become: true